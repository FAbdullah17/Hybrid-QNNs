[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "hybrid-qnns"
version = "1.0.0"
description = "A research framework for quantum-classical neural networks and barren plateau analysis"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["quantum machine learning", "quantum computing", "neural networks", "barren plateaus"]
authors = [
    {name = "Asma Zubair"},
    {name = "Farhan Riaz"},
    {name = "Fahad Abdullah"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pennylane>=0.30.0",
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "wandb>=0.12.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "pyyaml>=6.0",
    "tqdm>=4.62.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "ipython>=8.0.0",
]
notebook = [
    "jupyter>=1.0.0",
    "ipywidgets>=7.6.0",
]

[project.urls]
Homepage = "https://github.com/FAbdullah17/Hybrid-QNNs"
Documentation = "https://fabdullah17.github.io/Hybrid-QNNs/"
Repository = "https://github.com/FAbdullah17/Hybrid-QNNs"
"Bug Tracker" = "https://github.com/FAbdullah17/Hybrid-QNNs/issues"

[project.scripts]
hybrid-qnns = "run_all_experiments:main"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
